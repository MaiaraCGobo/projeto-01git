**------------------**
*-MaiaraCristinaGobo-*
*-NotasGit-----------*
**------------------**

git init
[ cria um .git dentro da sua pasta repositorio]

git status
[ ver as informacoes dos arquivos ]

git add " nome do arquivo.txt(ou qualquer outro .+) "
[ serve para adicionar o arquivo que ja esta na pasta/repositorio]

git add .
[ adiciona todos os arquivos em vermelho ]

git commit -m "(mensagem)"
[ commit -m quer dizer uma mensagem que represente o que voce enviou como umar versao inicial por ex: commit inicial . Caso de algum erro ele vai te pedir para configurar o seu git config, ai e so seguir a linha.(nao se esqueca, depois de cada alteracao de um commit -m) ]

git remote add origin
[ e o endereco aonde vc vai enviar seu repositorio/arquivos ]

git push
[ para subir o arquivo na nuvem github ]

git push --set-upstream origin master
[ sobe o arquivo para seu repositorio no github ]

git reflog
[ mostra a versao do seu codigo ]

------------------ avancado --------------------

{
git reset --hard (insira o id)
[ para voltar a versao anterior do seu codigo, o id se encontra no git reflog ]

git reset --hard (insira o id)
[ para ir na versao atual depois de verificar no git reflog ] 

#utilizar estes comando se for realmente preciso, consultar seu analista e a documentacao. 
}
 

----------------- branch -----------------------

A branch pode ser varias, paralelas.

git branch
[ para ver quais branch`s estao disponiveis ]

git branch staging
(criar outro nome se quiser, o mais comum e staging )
[ criar uma nova branch que recebe atualizacoes que nao estao testadas ]

git checkout (e o nome da branch)
[ serve para trocar de branch ]
























